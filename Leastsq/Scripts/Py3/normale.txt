
1. Transport mondial de passagers
Nombre d'observations= 11
Nombre d'inconnues= 3
Degré du polynôme= 2
X=
[[3.884841e+06 1.971000e+03 1.000000e+00]
 [3.900625e+06 1.975000e+03 1.000000e+00]
 [3.920400e+06 1.980000e+03 1.000000e+00]
 [3.940225e+06 1.985000e+03 1.000000e+00]
 [3.960100e+06 1.990000e+03 1.000000e+00]
 [3.980025e+06 1.995000e+03 1.000000e+00]
 [4.000000e+06 2.000000e+03 1.000000e+00]
 [4.020025e+06 2.005000e+03 1.000000e+00]
 [4.040100e+06 2.010000e+03 1.000000e+00]
 [4.060225e+06 2.015000e+03 1.000000e+00]
 [4.076361e+06 2.019000e+03 1.000000e+00]]
log10(cond(X))= 10.88602133214397
A=
[[1.74309920e+14 8.73575208e+10 4.37829270e+07]
 [8.73575208e+10 4.37829270e+07 2.19450000e+04]
 [4.37829270e+07 2.19450000e+04 1.10000000e+01]]
log10(cond(A))= 21.772042713313596
b=
[7.03465910e+07 3.50702469e+04 1.74845000e+01]
beta= [ 1.79495912e-03 -7.09074459e+00  7.00321002e+03]

2. La fonction polynomial_fit_normal_equations
beta= [ 6.19214974e-05 -3.68805183e-01  7.32230673e+02 -4.84611159e+05]

3. Prédire le nombre de passagers en 2030
Nombre de passagers en 2030= [7.59657984]

##################################
Optionnel

4. Teste d'autres degrés polynomiaux.

5. Normaliser les données
Avec des données non normalisées
Degré 1
[ 7.11423077e-02 -1.40339404e+02]
Degré 2
[ 1.79495912e-03 -7.09074459e+00  7.00321002e+03]
Degré 3
[ 6.19214974e-05 -3.68805183e-01  7.32230673e+02 -4.84611159e+05]
Avec des données normalisées
s= [-1.         -0.83333333 -0.625      -0.41666667 -0.20833333  0.
  0.20833333  0.41666667  0.625       0.83333333  1.        ]
Degré 1
[1.70741538 1.5895    ]
Degré 2
[1.03389625 1.70741538 1.15675176]
Degré 3
[0.86321469 1.03389625 1.08238898 1.15675176]
6. Prédire le nombre de passagers en 2030
avec des données normalisées.
With scaled data
Nombre de passagers en 2030= [5.84555702]
7. Cholesky
[ 1.79495853e-03 -7.09074225e+00  7.00320769e+03]
